@page  "/"
    @using StoreUI.Domain
    @using StoreUI.Data
    @inject AuthenticationStateProvider _authenticationStateProvider
    @inject NavigationManager _navigationManager
    @inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IHttpClientFactory _httpClient

    <EditForm Model="@user" OnValidSubmit="@ValidateUser">
        <div>
            <br /><br /><br /><br /><br />
        </div>
        <div>
            <h3 style="font-weight:bold; color:purple">Digistore Login</h3>
        </div>
        <div>
            <br />
        </div>
        <div class="col-12 row">
            <input class="form-control col-12" @bind="user.UserName" placeholder="email address" />
        </div>
        <br />
        <div class="col-12 row">
            <input type="password" class="form-control col-12" @bind="user.Password" placeholder="password" />
        </div>
        <br />
        <div class="col-12 row">
            <span class="col-12"></span>
            <input type="submit" class="form-control col-6 btn btn-primary" value="Login" />
            <a href="/register" class="col-3">Register</a>
        </div>
        <br />
        <div class="col-12 row" style="text-align:left; font-weight:bold">
            <span class="col-12">@LoginMesssage</span>
        </div>
    </EditForm>

    @code {
        private UserModel user = new UserModel();
        public string LoginMesssage { get; set; }

        private async Task<bool> ValidateUser()
        {
            ((CustomAuthenticationStateProvider)_authenticationStateProvider).MarkUserAsAuthenticated(user.UserName);
            _navigationManager.NavigateTo("/index");
            await sessionStorage.SetItemAsync("userName", user.UserName);
            return true;
        }

    }
